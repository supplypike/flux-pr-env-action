name: 'build-test'
on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'

jobs:
  build: # make sure build/ci work properly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .tool-versions
          cache: 'npm'
      - run: |
          npm ci
      - run: |
          npm run all
      - uses: sonarsource/sonarqube-scan-action@v4.1
        if: ${{ github.actor != 'dependabot[bot]' }}
        with:
          args: >
            -D sonar.projectKey=supplypike_flux-pr-env-action
            -D sonar.projectName=flux-pr-env-action
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  test: # make sure the action works on a clean machine without building
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: 'Create cluster'
        uses: AbsaOSS/k3d-action@v2
        with:
          cluster-name: 'test-cluster-1'
          args: --agents 1
      - name: Testing
        run: |
          kubectl cluster-info
          kubectl get pods -n kube-system
          echo "current-context:" $(kubectl config current-context)
          echo "environment-kubeconfig:" ${KUBECONFIG}
      - name: Install Flux binary
        uses: supplypike/setup-bin@v4
        with:
          uri: 'https://github.com/fluxcd/flux2/releases/download/v2.2.2/flux_2.2.2_linux_amd64.tar.gz'
          name: 'flux'
          version: '2.2.2'
      - name: Dev-install of flux to cluster
        run: |
          flux install
      - run: |
          kubectl create namespace previews
      - uses: ./
        with:
          namespace: previews
          skipCheck: true
